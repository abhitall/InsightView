name: Synthetic Monitoring

on:
  schedule:
    - cron: '*/30 * * * *'  # Runs every 30 minutes
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]
  workflow_dispatch:  # Allows manual triggering
    inputs:
      test_url:
        description: 'Target URL to test'
        required: false
        type: string
      browser:
        description: 'Browser to test with'
        required: false
        type: choice
        options:
          - chromium
          - mobile-chrome
        default: 'chromium'
      env_vars:
        description: 'Additional environment variables (JSON)'
        required: false
        type: string
        default: '{}'
      force_security_scan:
        description: 'Force security scan to run'
        required: false
        type: boolean
        default: false

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ${{ secrets.AWS_REGION }}
  S3_BUCKET: ${{ secrets.S3_BUCKET }}
  PROMETHEUS_PUSHGATEWAY: ${{ secrets.PROMETHEUS_PUSHGATEWAY }}
  TEST_URL: ${{ inputs.test_url || secrets.TEST_URL }}
  GITHUB_EVENT_NAME: ${{ github.event_name }}
  FORCE_SECURITY_SCAN: ${{ inputs.force_security_scan == true && 'true' || 'false' }}

jobs:
  synthetic-tests:
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.42.1-focal
    permissions:
      contents: read
      security-events: write
      actions: read
    continue-on-error: true  # Allow the workflow to continue even if this job fails
    
    steps:
      - uses: actions/checkout@v4
      
      # Install Docker for running ZAP container
      # Only needed for PR and push events or when security scan is forced
      - name: Install Docker
        if: github.event_name == 'pull_request' || github.event_name == 'push' || inputs.force_security_scan
        uses: docker/setup-buildx-action@v3

      - name: Run Synthetic Monitoring
        id: synthetic
        uses: ./.github/actions/synthetic-monitoring
        continue-on-error: true # Allow the step to fail but still run the remaining workflow
        with:
          test_url: ${{ env.TEST_URL }}
          aws_access_key_id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws_region: ${{ env.AWS_REGION }}
          s3_bucket: ${{ env.S3_BUCKET }}
          prometheus_pushgateway: ${{ env.PROMETHEUS_PUSHGATEWAY }}
          browser: ${{ inputs.browser || 'chromium' }}
          env_vars: ${{ inputs.env_vars }}
          
      - name: Report Status
        if: steps.synthetic.outcome != 'success'
        run: echo "::warning::Synthetic monitoring tests failed, but workflow will continue"

      # Upload ZAP Reports as artifacts if they exist
      - name: Upload ZAP Report as Artifact
        if: (github.event_name == 'pull_request' || github.event_name == 'push' || inputs.force_security_scan) && always()
        uses: actions/upload-artifact@v4
        with:
          name: zap-scan-report
          path: |
            report_html.html
            report_json.json
          retention-days: 30
          if-no-files-found: ignore