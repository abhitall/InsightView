name: 'Synthetic Monitoring'
description: 'Run synthetic monitoring tests with Playwright, sending metrics to Prometheus and traces to S3'
branding:
  icon: 'activity'
  color: 'blue'

inputs:
  test_url:
    description: 'Target URL to test'
    required: true
  aws_access_key_id:
    description: 'AWS/S3 Access Key ID'
    required: true
  aws_secret_access_key:
    description: 'AWS/S3 Secret Access Key'
    required: true
  aws_region:
    description: 'AWS/S3 Region. For AWS S3 buckets, this must match your bucket region (e.g., us-east-2)'
    required: true
  s3_bucket:
    description: 'S3 Bucket name'
    required: true
  s3_endpoint:
    description: 'S3 Endpoint URL (Do NOT set this for AWS S3 buckets. Only use for non-AWS S3-compatible services)'
    required: false
  s3_force_path_style:
    description: 'Use path-style addressing for S3 (Do NOT set this for AWS S3 buckets. Only use for non-AWS S3-compatible services)'
    required: false
    default: 'false'
  s3_tls_verify:
    description: 'Verify TLS certificates for S3 (Do NOT set this for AWS S3 buckets. Only use for non-AWS S3-compatible services)'
    required: false
    default: 'true'
  prometheus_pushgateway:
    description: 'Prometheus Pushgateway URL'
    required: true
  browser:
    description: 'Browser to use for testing'
    required: false
    default: 'chromium'
  config_path:
    description: 'Path to Playwright config file'
    required: false
    default: ''
  test_dir:
    description: 'Directory containing test files'
    required: false
    default: ''
  env_vars:
    description: 'JSON string of additional environment variables'
    required: false
    default: '{}'

runs:
  using: "composite"
  steps:
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install system dependencies
      shell: bash
      run: |
        if command -v apt-get >/dev/null; then
          apt-get update && apt-get install -y jq
        elif command -v apk >/dev/null; then
          apk add --no-cache jq
        else
          echo "Package manager not found, attempting to continue..."
        fi

    - name: Install dependencies
      shell: bash
      run: npm ci

    - name: Install Playwright
      shell: bash
      run: npx playwright install --with-deps ${{ inputs.browser }}

    - name: Setup environment
      shell: bash
      run: |
        # Infrastructure secrets
        cat << EOF > .env
        AWS_ACCESS_KEY_ID=${{ inputs.aws_access_key_id }}
        AWS_SECRET_ACCESS_KEY=${{ inputs.aws_secret_access_key }}
        AWS_REGION=${{ inputs.aws_region }}
        S3_BUCKET=${{ inputs.s3_bucket }}
        EOF

        # Only add S3 endpoint configuration for non-AWS S3 services
        if [ ! -z "${{ inputs.s3_endpoint }}" ]; then
          cat << EOF >> .env
        S3_ENDPOINT=${{ inputs.s3_endpoint }}
        S3_FORCE_PATH_STYLE=${{ inputs.s3_force_path_style }}
        S3_TLS_VERIFY=${{ inputs.s3_tls_verify }}
        EOF
        fi

        # Add remaining configuration
        cat << EOF >> .env
        PROMETHEUS_PUSHGATEWAY=${{ inputs.prometheus_pushgateway }}
        TEST_URL=${{ inputs.test_url }}
        EOF

        # Add custom environment variables if provided
        if [ ! -z "${{ inputs.env_vars }}" ]; then
          echo "${{ inputs.env_vars }}" | jq -r 'to_entries | .[] | "\(.key)=\(.value)"' >> .env
        fi

    - name: Create test directories
      shell: bash
      run: mkdir -p playwright-report test-results

    - name: Copy ZAP Rules
      shell: bash
      run: |
        mkdir -p .zap
        cp ${{ github.action_path }}/.zap/rules-config.tsv .zap/

    - name: Run synthetic tests
      shell: bash
      run: |
        if [ -n "${{ inputs.config_path }}" ]; then
          npm run test:synthetic -- --config="${{ inputs.config_path }}" --project=${{ inputs.browser }}
        else
          npm run test:synthetic -- --project=${{ inputs.browser }}
        fi

    - name: Run ZAP Scan
      uses: zaproxy/action-baseline@v0.11.0
      with:
        target: ${{ inputs.test_url }}
        rules_file_name: '.zap/rules-config.tsv'
        cmd_options: '-a'
        allow_issue_writing: true
        fail_action: false

    - name: Upload Reports
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: monitoring-reports-${{ github.run_id }}
        path: |
          playwright-report/
          test-results/
          report_html.html
          report_md.md
          report_json.json
        retention-days: 30
